#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

DIRNAME="${PWD##*/}"
FOSSILREPO="${DIRNAME}.fossil"
mkdir -p .marks
if [ ! -f "$FOSSILREPO" ]; then
  rm .marks/*
  touch .marks/git
  touch .marks/fossil
  echo ".marks/" >> .gitignore
  echo "$FOSSILREPO" >> .gitignore
  git fast-export --all --export-marks=.marks/git | fossil import --export-marks .marks/fossil --git "$FOSSILREPO"
  fossil sqlite3 -R "$FOSSILREPO" "INSERT OR REPLACE INTO config VALUES ('project-name', '${DIRNAME}', now());"
else
  git fast-export --all --import-marks=.marks/git --export-marks=.marks/git | fossil import --import-marks .marks/fossil --export-marks .marks/fossil --git --incremental "$FOSSILREPO"
fi
exit 0
